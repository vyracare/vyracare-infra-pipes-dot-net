name: CD - Auth - Deploy Terraform

on:
  workflow_call:
    inputs:
      branch-name:
        description: "Branch que disparou o deploy"
        required: true
        type: string
      lambda-source-dir:
        description: "Caminho (relativo ou absoluto) para a pasta publicada da Lambda"
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: false
      PAT_TOKEN:
        required: true

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve checkout ref
        id: resolve_checkout_ref
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const branch = process.env.BRANCH_NAME;
            if (!branch) {
              core.setOutput('ref', '');
              return;
            }

            try {
              await github.rest.repos.getBranch({
                owner: 'vyracare',
                repo: 'vyracare-infra-pipes-dot-net',
                branch,
              });
              core.setOutput('ref', branch);
            } catch (error) {
              if (error.status === 404) {
                core.info(`Branch ${branch} not found in vyracare/vyracare-infra-pipes-dot-net. Falling back to default branch.`);
                core.setOutput('ref', '');
              } else {
                throw error;
              }
            }
        env:
          BRANCH_NAME: ${{ inputs.branch-name }}

      - name: Checkout Infra (branch)
        if: steps.resolve_checkout_ref.outputs.ref != ''
        uses: actions/checkout@v4
        with:
          repository: vyracare/vyracare-infra-pipes-dot-net
          ref: ${{ steps.resolve_checkout_ref.outputs.ref }}
          token: ${{ secrets.PAT_TOKEN }}
          path: infra-repo

      - name: Checkout Infra (default)
        if: steps.resolve_checkout_ref.outputs.ref == ''
        uses: actions/checkout@v4
        with:
          repository: vyracare/vyracare-infra-pipes-dot-net
          token: ${{ secrets.PAT_TOKEN }}
          path: infra-repo

      - name: Determinar diretório do pacote Lambda
        shell: bash
        env:
          LAMBDA_SOURCE_INPUT: ${{ inputs.lambda-source-dir }}
        run: |
          candidate="${LAMBDA_SOURCE_INPUT}"

          if [[ -n "${candidate}" ]]; then
            if [[ "${candidate}" != /* ]]; then
              candidate="${GITHUB_WORKSPACE}/${candidate}"
            fi

            if [[ ! -d "${candidate}" ]]; then
              echo "::error::O caminho informado em inputs.lambda-source-dir ('${candidate}') não existe."
              exit 1
            fi
          else
            for path in \
              "${GITHUB_WORKSPACE}/backend/Vyracare.Auth/publish" \
              "${GITHUB_WORKSPACE}/publish" \
              "${GITHUB_WORKSPACE}/infra-repo/backend/Vyracare.Auth/publish"; do
              if [[ -d "${path}" ]]; then
                candidate="${path}"
                break
              fi
            done

            if [[ -z "${candidate}" ]]; then
              echo "::error::Não foi possível localizar a pasta publicada da Lambda. Informe inputs.lambda-source-dir ou garanta que o diretório de publicação exista."
              exit 1
            fi
          fi

          echo "Diretório do pacote Lambda: ${candidate}"
          echo "TF_VAR_lambda_source_dir=${candidate}" >> "${GITHUB_ENV}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra-repo/infra

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./infra-repo/infra

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./infra-repo/infra

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
